{
  "name": "cdk",
  "version": "0.1.0",
  "bin": {
    "cdk": "bin/cdk.js"
  },
  "scripts": {
    "build": "tsc",
    "watch": "tsc -w",
    "test": "jest",
    "cdk": "cdk",
    "createLayer": "ts-node lib/process/pre.ts",
    "copyData": "cd .. && npm run bundleData",
    "predev": "npm run createLayer",
    "dev": "sam-beta-cdk local start-api",
    "predeploy": "npm run createLayer",
    "deploy": "cdk deploy -c @aws-cdk/core:newStyleStackSynthesis=true --profile produser",
    "vpc-deploy": "cdk -a \"npx ts-node --prefer-ts-exts bin/vpc.ts\" deploy VpcStack -c @aws-cdk/core:newStyleStackSynthesis=true --profile produser",
    "aurora-deploy": "cdk -a \"npx ts-node --prefer-ts-exts bin/aurora.ts\" deploy AuroraStack -c @aws-cdk/core:newStyleStackSynthesis=true --profile produser",
    "bastion-deploy": "cdk -a \"npx ts-node --prefer-ts-exts bin/bastion.ts\" deploy BastionStack -c @aws-cdk/core:newStyleStackSynthesis=true --profile produser",
    "prelambda-deploy": "npm run createLayer && npm run copyData",
    "lambda-deploy": "cdk -a \"npx ts-node --prefer-ts-exts bin/lambda.ts\" deploy PrivateLambdaStack --profile produser",
    "step-functions-deploy": "cdk -a \"npx ts-node --prefer-ts-exts bin/step-functions.ts\" deploy StepFunctionSampleStack --profile produser",
    "create-layer-for-lambda-with-cognito-deploy": "ts-node lib/process/preForCognitoLambda.ts && cdk -a \"npx ts-node --prefer-ts-exts bin/lambda-layer-for-cognito-deploy.ts\" deploy  -c @aws-cdk/core:newStyleStackSynthesis=true --profile produser",
    "lambda-with-cognito-deploy": "cdk -a \"npx ts-node --prefer-ts-exts bin/lambdaWithCognito.ts\" deploy  -c @aws-cdk/core:newStyleStackSynthesis=true --profile produser",
    "vpc-test-deploy": "cdk -a \"npx ts-node --prefer-ts-exts bin/vpc-route-test.ts\" destroy VpcRouteTestStack  --profile produser",
    "cloudfront-s3-deploy": "cdk -a \"npx ts-node --prefer-ts-exts bin/cloudfront.ts\" destroy AWSCloudFrontStack --profile produser",
    "precloudfront-client-deploy": "cd ../client/ && npm run build",
    "cloudfront-client-deploy": "cdk -a \"npx ts-node --prefer-ts-exts bin/cloudfront-client-deploy.ts\" deploy AWSCloudFrontClientDeployStack --profile produser",
    "prelog-retention-deploy": "aws logs describe-log-groups --query \"logGroups[?contains(logGroupName,`/aws/lambda/hello`)].logGroupName\" > constants/log-groups.json",
    "log-retention-deploy": "cdk -a \"npx ts-node --prefer-ts-exts bin/log-retention.ts\" deploy LogS3FireHoseStack   --profile produser",
    "postlog-retention-deploy": "aws logs describe-log-groups --log-group-name-prefix /aws/lambda/hello --query \"logGroups[?retentionInDays==null]\" | jq -r \".[].logGroupName\" | sed \"s/^ *\\| *$//\"  | xargs -IVAR_LOG_GROUP_NAME aws logs put-retention-policy --log-group-name VAR_LOG_GROUP_NAME --retention-in-days 60",
    "docker-lambda-hello": "cdk -a \"npx ts-node --prefer-ts-exts bin/python-docker-lambda-hello.ts\" deploy PythonDockerLambdaHelloStack --profile produser",
    "docker-lambda-echo": "cdk -a \"npx ts-node --prefer-ts-exts bin/python-docker-lambda-echo.ts\" deploy PythonDockerLambdaEchoStack --profile produser",
    "docker-lambda-s3": "cdk -a \"npx ts-node --prefer-ts-exts bin/python-docker-lambda-s3.ts\" deploy PythonDockerLambdaS3Stack --profile produser",
    "docker-lambda-grib": "cdk -a \"npx ts-node --prefer-ts-exts bin/python-docker-lambda-grib.ts\" deploy PythonDockerLambdaGribStack --profile produser",
    "sns-deploy": "cdk -a \"npx ts-node --prefer-ts-exts bin/alarm-sns.ts\" deploy AlarmSNSStack --profile produser",
    "s3-filter-deploy": "cdk -a \"npx ts-node --prefer-ts-exts bin/s3-filter.ts\" deploy S3FilterStack --profile produser",
    "playwright-deploy": "cdk -a \"npx ts-node --prefer-ts-exts bin/playwright.ts\" deploy PlayWrightStack --profile produser",
    "apigw2s3-deploy": "cdk -a \"npx ts-node --prefer-ts-exts bin/api-gateway-proxy-to-s3-by-cdk.ts\" deploy ApiGatewayProxyToS3ByCdkStack --profile produser"
  },
  "devDependencies": {
    "@types/fs-extra": "^11.0.4",
    "@types/jest": "^29.5.12",
    "@types/node": "20.11.17",
    "aws-cdk": "2.127.0",
    "fs-extra": "^11.2.0",
    "jest": "^29.7.0",
    "npm-check-updates": "^16.14.15",
    "ts-node": "^10.9.2",
    "typescript": "~5.3.3"
  },
  "dependencies": {
    "@aws-cdk/aws-apigatewayv2-alpha": "^2.114.1-alpha.0",
    "@aws-cdk/aws-apigatewayv2-authorizers-alpha": "^2.114.1-alpha.0",
    "@aws-cdk/aws-apigatewayv2-integrations-alpha": "^2.114.1-alpha.0",
    "@aws-cdk/aws-cognito-identitypool-alpha": "^2.127.0-alpha.0",
    "@aws-cdk/aws-kinesisfirehose-alpha": "^2.127.0-alpha.0",
    "@aws-cdk/aws-kinesisfirehose-destinations-alpha": "^2.127.0-alpha.0",
    "aws-cdk-lib": "2.127.0",
    "constructs": "^10.3.0",
    "dotenv": "^16.4.3",
    "eslint": "^8.56.0",
    "source-map-support": "^0.5.21"
  }
}
